# 시물레이션과 완전 탐색
# 풀이를 떠올리는 것은 쉽지만 소스코드로 옮기기 어려운 문제
''' 상하좌우
여행가 A는 N * N 크기의 정사각형 공간 위에 서 있습니다. 이 공간은 1 * 1 크기의 정사각형으로 나누어져 있습니다.
가장 왼쪽 좌표는 (1, 1)이며, 가장 오른쪽 아래 좌표는 (N, N)에 해당합니다. 여행가 A는 상, 하, 좌, 우 방향으로 이동할 수 있으며,
시작 좌표는 항상 (1, 1)입니다. 우리 앞에는 여행가 A가 이동할 계획이 적힌 계획서가 놓여 있습니다.
계획서에는 하나의 줄에 띄어쓰기를 기분으로 하여 L, R, U, D 중 하나의 문자가 빈복적으로 적혀 있습니다.
- L : 왼쪽으로 한 칸 이동
- R : 오른쪽으로 한 칸 이동
- U : 위쪽으로 한 칸 이동
- D : 아래쪽으로 한 칸 이동
'''


n = int(input())  # N * N의 정사각형 크기 지정
plans = input().split()  # 어떻게 이동할지 'LRUD'로 설정
x, y = 1, 1

dx = [0, 0, -1, 1]
dy = [-1, 1, 0, 0]
move_types = ['L', 'R', 'U', 'D']

for plan in plans:
    for i in range(len(move_types)):
        if plan == move_types[i]:
            nx = x + dx[i]
            ny = y + dy[i]
    if nx < 1 or ny < 1 or nx > n or ny > n:
        continue
    x, y = nx, ny


print(x, y)  # 현재 좌표 출력
'''
한 마을에 모함가가 N명 있습니다. 모험가 길드에서는 N명의 모험가를 대상으로 '공포도'를 측정했는데,
공포도가 높은 모험가는 쉽게 공포를 느껴 위험 상황에서 제대로 대처할 능력이 떨어집니다.
모함가 길드장인 은총이는 모험가 그룹을 안전하게 구성하고자 공포도가 S인 모험가는 반드시 S명 이상으로
구성한 험가 그룹에 참여해야 여행을 떠날 수 있도록 규정했습니다.
은총이는 최대 몇 개의 모함가 그룹을 만들 수 있는지 궁급합니다. N명의 모험가에 대한 정보가 주어졌을 때,
여행을 떠날 수 있는 그룹 수의 최댓값을 구하는 프로그램을 만드시오.
예시 -> 5 / 2 3 1 2 2 출력 -> 2
'''

n = int(input())
data = list(map(int, input().split()))
data.sort()

group = 0  # 총 그룹의 수
count = 0  # 현재 그룹에 포함된 모험가의 수

for i in data:  # 공포도를 낮은 것 부터 하나씩 확인하며
    count += 1  # 현재 그룹에 해당 모험가를 포함시키기
    if count >= i:  # 현재 그룹에 포함된 모험가의 수가 현재 공포도 이상이라면, 그룹 결성
        group += 1  # 총 그룹의 수 증가시키기
        count = 0  # 현재 그룹에 포함된 모험가의 수 초기화

print(group)

